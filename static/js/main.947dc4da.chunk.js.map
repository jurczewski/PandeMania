{"version":3,"sources":["api/FirebaseAPI.js","context/user/UserContext.js","FirebaseConfig.js","context/user/UserProvider.jsx","components/RestrictedRoute/RestrictedRoute.jsx","api/FetchDataForCountry.js","components/ChartWrapper/ChartWrapper.jsx","api/FetchAllCountries.js","components/CountryIcon/CountryIcon.jsx","components/CountryPicker/CountryPicker.jsx","components/FavoriteIcon/FavoriteIcon.jsx","components/TableWrapper/TableWrapper.jsx","components/Layout/Layout.jsx","components/Login/Login.jsx","components/Logout/Logout.jsx","App.jsx","splashscreen/splashscreen.js","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["db","initialState","user","fetched","country","setUser","UserContext","React","createContext","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","UserProvider","children","useState","useEffect","firebase","auth","onAuthStateChanged","userAuth","userId","uid","collection","doc","get","then","exists","data","catch","error","console","Provider","value","RestrictedRoute","path","userContext","useContext","to","dataForCountry","countryName","a","fetch","response","ok","json","map","record","id","ID","Country","confirmed","Confirmed","recovered","Recovered","deaths","Deaths","active","Active","date","Date","parse","warn","timelineEnum","Object","freeze","ONE_MONTH","SIX_MONTH","ONE_YEAR","YTD","ALL","series","getTime","options","chart","zoom","autoScaleYaxis","theme","mode","dataLabels","enabled","xaxis","type","tooltip","x","format","selection","ChartWrapper","chartData","setChartData","fetchData","name","c","buttons","label","ButtonGroup","className","button","Button","variant","color","onClick","timeline","daysToGoBack","dates","length","ApexCharts","exec","firstDay","getFullYear","updateData","height","allCountries","slug","Slug","ISO2","log","getCountryInfo","code","countries","find","sizes","16","24","32","48","64","themes","FLAT","SHINY","CountryIcon","size","src","alt","defaultProps","darkTheme","createMuiTheme","palette","CountryPicker","setPickedCountry","setCountries","fetchedCountries","sortedCountries","sort","b","localeCompare","ThemeProvider","Autocomplete","style","width","getOptionLabel","option","onChange","_","handleCountrySelection","renderInput","params","TextField","margin","renderOption","inputValue","matches","match","parts","part","fontWeight","highlight","text","iconStyle","fontSize","FavoriteIconWrapper","isSet","createData","number","TableWrapper","rows","setRows","today","marginBottom","TableContainer","component","Paper","Table","aria-label","TableBody","row","TableRow","TableCell","scope","align","Layout","userCountry","pickedCountry","countryCode","set","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","Login","Container","maxWidth","firebaseAuth","Logout","context","signOut","app","initializeApp","firestore","initialize","App","setTimeout","loaderWrapper","document","getElementById","addEventListener","display","opacity","splash","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","href","origin","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.947dc4da.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport config from '../FirebaseConfig';\n\nlet db;\n\nexport const initialize = () => {\n\tconst app = firebase.initializeApp(config);\n\tdb = firebase.firestore(app);\n};\n\nexport const addFavoriteCountry = (userId, countryCode) => {\n\tdb.collection('users')\n\t\t.doc(userId)\n\t\t.set({\n\t\t\tcountry: countryCode,\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error writing document: ', error);\n\t\t});\n};\n\nexport const getFavoriteCountry = (userId) => {\n\tconst docRef = db.collection('users').doc(userId);\n\n\treturn docRef\n\t\t.get()\n\t\t.then((doc) => {\n\t\t\tif (doc.exists) {\n\t\t\t\treturn doc.data().country;\n\t\t\t}\n\t\t\treturn '';\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error getting data for user:', error);\n\t\t});\n};\n","import React from 'react';\n\nexport const initialState = {\n\tuser: null,\n\tfetched: false,\n\tcountry: '',\n\n\tsetUser: () => {},\n};\n\nconst UserContext = React.createContext(initialState);\n\nexport default UserContext;\n","const config = {\n\tapiKey: 'AIzaSyCGg--7lUP9qUJxPQUHmTyfkzZhW3AHsT8',\n\tauthDomain: 'pandemania-d9690.firebaseapp.com',\n\tprojectId: 'pandemania-d9690',\n\tstorageBucket: 'pandemania-d9690.appspot.com',\n\tmessagingSenderId: '404379003612',\n\tappId: '1:404379003612:web:4a1c9b3218bfdf46d0a219',\n};\n\nexport default config;\n","import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport PropTypes from 'prop-types';\nimport UserContext from './UserContext';\nimport { getFavoriteCountry } from '../../api/FirebaseAPI';\n\nconst initialState = {\n\tuser: null,\n\tfetched: false,\n\tcountry: '',\n};\nconst UserProvider = ({ children }) => {\n\tconst [user, setUser] = useState(initialState);\n\n\tuseEffect(() => {\n\t\tfirebase.auth().onAuthStateChanged((userAuth) => {\n\t\t\tif (userAuth) {\n\t\t\t\tgetFavoriteCountry(userAuth.uid).then((country) => {\n\t\t\t\t\tsetUser({\n\t\t\t\t\t\tuser: userAuth,\n\t\t\t\t\t\tfetched: true,\n\t\t\t\t\t\tcountry,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}, []);\n\n\treturn <UserContext.Provider value={{ ...user, setUser }}>{children}</UserContext.Provider>;\n};\n\nUserProvider.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n};\n\nexport default UserProvider;\n","import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport UserContext from '../../context/user/UserContext';\n\nconst RestrictedRoute = ({ path, children }) => {\n\tconst userContext = useContext(UserContext);\n\n\tif (userContext.fetched) {\n\t\treturn userContext.user !== null ? <Route path={path}>{children}</Route> : <Redirect to=\"/\" />;\n\t}\n\treturn null;\n};\n\nRestrictedRoute.propTypes = {\n\tpath: PropTypes.string.isRequired,\n\tchildren: PropTypes.node.isRequired,\n};\n\nexport default RestrictedRoute;\n","const apiUrl = 'https://api.covid19api.com/country/';\n\nconst dataForCountry = async (countryName) => {\n\ttry {\n\t\treturn fetch(`${apiUrl}${countryName}`)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response.json();\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t})\n\t\t\t.then((data) =>\n\t\t\t\tdata.map((record) => ({\n\t\t\t\t\tid: record.ID,\n\t\t\t\t\tcountry: record.Country,\n\t\t\t\t\tconfirmed: record.Confirmed,\n\t\t\t\t\trecovered: record.Recovered,\n\t\t\t\t\tdeaths: record.Deaths,\n\t\t\t\t\tactive: record.Active,\n\t\t\t\t\tdate: Date.parse(record.Date),\n\t\t\t\t})),\n\t\t\t);\n\t} catch (error) {\n\t\treturn console.warn(error);\n\t}\n};\n\nexport default dataForCountry;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport Chart from 'react-apexcharts';\nimport ApexCharts from 'apexcharts';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport dataForCountry from '../../api/FetchDataForCountry';\nimport './ChartWrapper.css';\n\nconst id = 'area-datetime';\n\nconst timelineEnum = Object.freeze({\n\tONE_MONTH: 'one_month',\n\tSIX_MONTH: 'six_months',\n\tONE_YEAR: 'one_year',\n\tYTD: 'ytd',\n\tALL: 'all',\n});\n\nconst initialState = {\n\tseries: [\n\t\t{\n\t\t\tdata: [[new Date().getTime(), 0]],\n\t\t},\n\t],\n\toptions: {\n\t\tchart: {\n\t\t\tid,\n\t\t\tzoom: {\n\t\t\t\tautoScaleYaxis: true,\n\t\t\t},\n\t\t},\n\t\ttheme: {\n\t\t\tmode: 'dark',\n\t\t},\n\t\tdataLabels: {\n\t\t\tenabled: false,\n\t\t},\n\t\txaxis: {\n\t\t\ttype: 'datetime',\n\t\t},\n\t\ttooltip: {\n\t\t\tx: {\n\t\t\t\tformat: 'dd MMM yyyy',\n\t\t\t},\n\t\t},\n\t},\n\tselection: timelineEnum.ALL,\n};\n\nconst ChartWrapper = ({ countryName }) => {\n\tconst [chartData, setChartData] = useState(initialState);\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, [countryName]);\n\n\tconst updateData = (timeline) => {\n\t\tconst dates = chartData.series[0].data;\n\t\tconst length = dates.length - 1;\n\t\tlet daysToGoBack;\n\n\t\tif (length === -1) return;\n\n\t\tsetChartData({\n\t\t\t...chartData,\n\t\t\tselection: timeline,\n\t\t});\n\n\t\tswitch (timeline) {\n\t\t\tcase timelineEnum.ONE_MONTH:\n\t\t\t\tdaysToGoBack = 31;\n\t\t\t\tApexCharts.exec(id, 'zoomX', dates[length - daysToGoBack][0], dates[length][0]);\n\t\t\t\tbreak;\n\t\t\tcase timelineEnum.SIX_MONTH:\n\t\t\t\tdaysToGoBack = 6 * 31;\n\t\t\t\tApexCharts.exec(id, 'zoomX', dates[length - daysToGoBack][0], dates[dates.length - 1][0]);\n\t\t\t\tbreak;\n\t\t\tcase timelineEnum.ONE_YEAR:\n\t\t\t\tdaysToGoBack = 365;\n\t\t\t\tApexCharts.exec(id, 'zoomX', dates[length - daysToGoBack][0], dates[length][0]);\n\t\t\t\tbreak;\n\t\t\tcase timelineEnum.YTD: {\n\t\t\t\tconst firstDay = new Date(new Date().getFullYear(), 0, 1);\n\t\t\t\tApexCharts.exec(id, 'zoomX', firstDay.getTime(), dates[length][0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase timelineEnum.ALL:\n\t\t\t\tApexCharts.exec(id, 'zoomX', dates[0][0], dates[length][0]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t};\n\n\tconst fetchData = async () => {\n\t\tconst response = await dataForCountry(countryName);\n\n\t\tlet series = [];\n\t\tif (typeof response !== 'undefined') {\n\t\t\tseries = [\n\t\t\t\t{\n\t\t\t\t\tname: 'Confirmed cases',\n\t\t\t\t\tdata: response.map((c) => [c.date, c.confirmed]),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Recovered cases',\n\t\t\t\t\tdata: response.map((c) => [c.date, c.recovered]),\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tsetChartData({\n\t\t\t\t...chartData,\n\t\t\t\tseries,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst buttons = [\n\t\t{\n\t\t\tvalue: timelineEnum.ONE_MONTH,\n\t\t\tlabel: '1M',\n\t\t},\n\t\t{\n\t\t\tvalue: timelineEnum.SIX_MONTH,\n\t\t\tlabel: '6M',\n\t\t},\n\t\t{\n\t\t\tvalue: timelineEnum.ONE_YEAR,\n\t\t\tlabel: '1Y',\n\t\t},\n\t\t{\n\t\t\tvalue: timelineEnum.YTD,\n\t\t\tlabel: 'YTD',\n\t\t},\n\t\t{\n\t\t\tvalue: timelineEnum.ALL,\n\t\t\tlabel: 'ALL',\n\t\t},\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<ButtonGroup className=\"toolbar\">\n\t\t\t\t{buttons.map((button) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={button.value}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor={chartData.selection === button.value ? 'primary' : ''}\n\t\t\t\t\t\tonClick={() => updateData(button.value)}\n\t\t\t\t\t\tclassName={chartData.selection === button.value ? 'active' : ''}\n\t\t\t\t\t>\n\t\t\t\t\t\t{button.label}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</ButtonGroup>\n\n\t\t\t<div className=\"chart-wrapper\">\n\t\t\t\t{chartData.series[0].data.length === 0 && <h2 className=\"chart-wrapper__header\">No data</h2>}\n\t\t\t\t<Chart options={chartData.options} series={chartData.series} type=\"area\" height={500} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nChartWrapper.propTypes = {\n\tcountryName: propTypes.string.isRequired,\n};\n\nexport default ChartWrapper;\n","const apiUrl = 'https://api.covid19api.com/countries';\n\nexport const allCountries = async () => {\n\ttry {\n\t\treturn fetch(apiUrl)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response.json();\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t})\n\t\t\t.then((data) =>\n\t\t\t\tdata.map((record) => ({\n\t\t\t\t\tcountry: record.Country,\n\t\t\t\t\tslug: record.Slug,\n\t\t\t\t\tISO2: record.ISO2,\n\t\t\t\t})),\n\t\t\t);\n\t} catch (error) {\n\t\treturn console.log(error);\n\t}\n};\n\nexport const getCountryInfo = async (code) => {\n\tconst countries = await allCountries();\n\treturn countries.find((c) => c.ISO2 === code);\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst sizes = Object.freeze({\n\t16: 16,\n\t24: 24,\n\t32: 32,\n\t48: 48,\n\t64: 64,\n});\n\nconst themes = Object.freeze({\n\tFLAT: 'flat',\n\tSHINY: 'shiny',\n});\n\nconst CountryIcon = ({ code, size, name, theme }) => {\n\treturn <img src={`https://www.countryflags.io/${code}/${theme}/${size}.png`} alt={name} />;\n};\n\nexport default CountryIcon;\n\nCountryIcon.propTypes = {\n\tcode: propTypes.string,\n\tsize: propTypes.oneOf([16, 24, 32, 48, 64]),\n\tname: propTypes.string,\n\ttheme: propTypes.string,\n};\n\nCountryIcon.defaultProps = {\n\tcode: 'PL',\n\tsize: sizes[16],\n\tname: 'Poland',\n\ttheme: themes.FLAT,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport { allCountries } from '../../api/FetchAllCountries';\nimport CountryIcon from '../CountryIcon/CountryIcon';\nimport './CountryPicker.css';\n\nconst darkTheme = createMuiTheme({\n\tpalette: {\n\t\ttype: 'dark',\n\t},\n});\n\nconst CountryPicker = ({ setPickedCountry }) => {\n\tconst [countries, setCountries] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\n\tconst fetchData = async () => {\n\t\tconst fetchedCountries = await allCountries();\n\t\tconst sortedCountries = fetchedCountries.sort((a, b) => a.country.localeCompare(b.country));\n\t\tsetCountries(sortedCountries);\n\t};\n\n\tconst handleCountrySelection = (value) => {\n\t\tif (value) {\n\t\t\tsetPickedCountry(value);\n\t\t}\n\t};\n\n\treturn (\n\t\t<ThemeProvider theme={darkTheme}>\n\t\t\t<Autocomplete\n\t\t\t\tid=\"highlights-demo\"\n\t\t\t\ttheme={darkTheme}\n\t\t\t\tstyle={{ width: 300 }}\n\t\t\t\toptions={countries}\n\t\t\t\tgetOptionLabel={(option) => option.country}\n\t\t\t\tonChange={(_, value) => handleCountrySelection(value)}\n\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Countries\" variant=\"outlined\" margin=\"normal\" />}\n\t\t\t\trenderOption={(option, { inputValue }) => {\n\t\t\t\t\tconst matches = match(option.country, inputValue);\n\t\t\t\t\tconst parts = parse(option.country, matches);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<CountryIcon code={option.ISO2} name={option.country} />\n\t\t\t\t\t\t\t{parts.map((part) => (\n\t\t\t\t\t\t\t\t<span key={part.text} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n\t\t\t\t\t\t\t\t\t{part.text}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</ThemeProvider>\n\t);\n};\n\nCountryPicker.propTypes = {\n\tsetPickedCountry: propTypes.func.isRequired,\n};\n\nexport default CountryPicker;\n","import React from 'react';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PropTypes from 'prop-types';\nimport './FavoriteIcon.css';\n\nconst iconStyle = {\n\tfontSize: '2rem',\n};\n\nconst FavoriteIconWrapper = ({ isSet, onClick }) => {\n\treturn (\n\t\t<div className=\"wrapper\">\n\t\t\t{isSet ? (\n\t\t\t\t<FavoriteIcon onClick={onClick} className=\"icon\" style={iconStyle} />\n\t\t\t) : (\n\t\t\t\t<FavoriteBorderIcon onClick={onClick} className=\"icon\" style={iconStyle} />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nFavoriteIconWrapper.propTypes = {\n\tisSet: PropTypes.bool,\n\tonClick: PropTypes.func.isRequired,\n};\n\nFavoriteIconWrapper.defaultProps = {\n\tisSet: false,\n};\n\nexport default FavoriteIconWrapper;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport dataForCountry from '../../api/FetchDataForCountry';\n\nconst darkTheme = createMuiTheme({\n\tpalette: {\n\t\ttype: 'dark',\n\t},\n});\n\nconst initialState = [\n\tcreateData('Confirmed', 0),\n\tcreateData('Deaths', 0),\n\tcreateData('Recovered', 0),\n\tcreateData('Active', 0),\n];\n\nfunction createData(name, number) {\n\treturn { name, number };\n}\n\nconst TableWrapper = ({ countryName }) => {\n\tconst [rows, setRows] = useState(initialState);\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, [countryName]);\n\n\tconst fetchData = async () => {\n\t\tconst response = await dataForCountry(countryName);\n\n\t\tif (response.length !== 0) {\n\t\t\tconst today = response[response.length - 1];\n\n\t\t\tsetRows([\n\t\t\t\tcreateData('Confirmed', today.confirmed),\n\t\t\t\tcreateData('Deaths', today.deaths),\n\t\t\t\tcreateData('Recovered', today.recovered),\n\t\t\t\tcreateData('Active', today.active),\n\t\t\t]);\n\t\t} else {\n\t\t\tsetRows(initialState);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div style={{ marginBottom: '1rem' }}>\n\t\t\t<ThemeProvider theme={darkTheme}>\n\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t<Table aria-label=\"country statistic\">\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t\t\t\t<TableRow key={row.name}>\n\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\" style={{ fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\t{row.name}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{row.number}</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t);\n};\n\nTableWrapper.propTypes = {\n\tcountryName: propTypes.string.isRequired,\n};\n\nexport default TableWrapper;\n","import React, { useContext, useEffect, useState } from 'react';\nimport './Layout.css';\nimport AreaDateTimeCountryData from '../ChartWrapper/ChartWrapper';\nimport CountryPicker from '../CountryPicker/CountryPicker';\nimport CountryIcon from '../CountryIcon/CountryIcon';\nimport FavoriteIconWrapper from '../FavoriteIcon/FavoriteIcon';\nimport UserContext from '../../context/user/UserContext';\nimport { addFavoriteCountry } from '../../api/FirebaseAPI';\nimport { getCountryInfo } from '../../api/FetchAllCountries';\nimport TableWrapper from '../TableWrapper/TableWrapper';\n\nconst Layout = () => {\n\tconst { country: userCountry, user, setUser, fetched } = useContext(UserContext);\n\tconst [pickedCountry, setPickedCountry] = useState({\n\t\tslug: 'poland',\n\t\tcountry: 'Poland',\n\t\tISO2: 'pl',\n\t});\n\n\tuseEffect(() => {\n\t\tif (typeof userCountry !== 'undefined' && userCountry !== '') {\n\t\t\tgetCountryInfo(userCountry).then((country) => setPickedCountry(country));\n\t\t}\n\t}, [userCountry]);\n\n\tconst handleSetFavoriteCountry = () => {\n\t\tconst id = user.uid;\n\t\taddFavoriteCountry(id, pickedCountry.ISO2);\n\t\tsetUser({ user, fetched, country: pickedCountry.ISO2 });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h1>PandeMania 🦠</h1>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<p className=\"title\">\n\t\t\t\t\tCases and recoveries for whole country:\n\t\t\t\t\t{pickedCountry && <span className=\"bold\"> {pickedCountry.country}</span>}\n\t\t\t\t\t<CountryIcon code={pickedCountry.ISO2} size={24} name={pickedCountry.country} />\n\t\t\t\t</p>\n\t\t\t\t<div className=\"picker\">\n\t\t\t\t\t<CountryPicker setPickedCountry={(value) => setPickedCountry(value)} />\n\t\t\t\t\t{user && (\n\t\t\t\t\t\t<FavoriteIconWrapper\n\t\t\t\t\t\t\tonClick={handleSetFavoriteCountry}\n\t\t\t\t\t\t\tisSet={pickedCountry.ISO2 === userCountry}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<AreaDateTimeCountryData countryName={pickedCountry.slug} />\n\t\t\t\t<TableWrapper countryName={pickedCountry.slug} />\n\t\t\t</main>\n\t\t</>\n\t);\n};\n\nexport default Layout;\n","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Container from '@material-ui/core/Container';\nimport './Login.css';\n\nconst uiConfig = {\n\tsignInFlow: 'redirect',\n\tsignInSuccessUrl: '/',\n\tsignInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n};\n\nconst Login = () => {\n\treturn (\n\t\t<Container maxWidth=\"sm\" className=\"container\">\n\t\t\t<div className=\"paper\">\n\t\t\t\t<header>\n\t\t\t\t\t<h1>Choose sign-in option:</h1>\n\t\t\t\t</header>\n\t\t\t\t<StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n\t\t\t</div>\n\t\t</Container>\n\t);\n};\n\nexport default Login;\n","import React, { useContext, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Redirect } from 'react-router-dom';\nimport UserContext from '../../context/user/UserContext';\n\nconst Logout = () => {\n\tconst context = useContext(UserContext);\n\n\tuseEffect(() => {\n\t\tif (context.fetched) {\n\t\t\tfirebase\n\t\t\t\t.auth()\n\t\t\t\t.signOut()\n\t\t\t\t.then(() =>\n\t\t\t\t\tcontext.setUser({\n\t\t\t\t\t\tuser: null,\n\t\t\t\t\t\tfetched: false,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t}\n\t});\n\n\treturn <Redirect to=\"/\" />;\n};\n\nexport default Logout;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport UserProvider from './context/user/UserProvider';\nimport RestrictedRoute from './components/RestrictedRoute/RestrictedRoute';\nimport Layout from './components/Layout/Layout';\nimport Login from './components/Login/Login';\nimport Logout from './components/Logout/Logout';\nimport { initialize } from './api/FirebaseAPI';\n\ninitialize();\n\nfunction App() {\n\treturn (\n\t\t<UserProvider>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t\t<Login />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<RestrictedRoute path=\"/logout\">\n\t\t\t\t\t\t\t<Logout />\n\t\t\t\t\t\t</RestrictedRoute>\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<Layout />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t</UserProvider>\n\t);\n}\n\nexport default App;\n","async function splash() {\n\tsetTimeout(() => {\n\t\tconst loaderWrapper = document.getElementById('loader-wrapper');\n\t\tloaderWrapper.addEventListener(\n\t\t\t'transitionend',\n\t\t\t() => {\n\t\t\t\tloaderWrapper.style.display = 'none';\n\t\t\t},\n\t\t\ttrue,\n\t\t);\n\t\tloaderWrapper.style.opacity = 0.0;\n\t}, 1200);\n}\n\nexport default splash;\n","/* eslint-disable no-param-reassign */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable import/named */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './splashscreen/splashscreen.css';\nimport splash from './splashscreen/splashscreen';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<div id=\"loader-wrapper\">\n\t\t\t<div id=\"loader\" />\n\t\t</div>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n\tsplash,\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}