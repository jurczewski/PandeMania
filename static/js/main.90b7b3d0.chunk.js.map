{"version":3,"sources":["context/user/UserContext.js","context/user/UserProvider.jsx","FirebaseConfig.js","components/RestrictedRoute/RestrictedRoute.jsx","api/FetchDataForCountry.js","components/ChartWrapper/ChartWrapper.jsx","api/FetchAllCountries.js","components/CountryIcon/CountryIcon.jsx","components/CountryPicker/CountryPicker.jsx","components/Layout/Layout.jsx","components/Login/Login.jsx","components/Logout/Logout.jsx","App.jsx","splashscreen/splashscreen.js","serviceWorkerRegistration.js","reportWebVitals.js","index.jsx"],"names":["initialState","user","fetched","setUser","UserContext","React","createContext","UserProvider","children","useState","useEffect","firebase","auth","onAuthStateChanged","userAuth","Provider","value","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","RestrictedRoute","path","userContext","useContext","to","dataForCountry","countryName","a","fetch","then","response","ok","json","data","map","record","id","ID","country","Country","confirmed","Confirmed","recovered","Recovered","date","Date","parse","console","warn","timelineEnum","Object","freeze","ONE_MONTH","SIX_MONTH","ONE_YEAR","YTD","ALL","series","getTime","options","chart","zoom","autoScaleYaxis","theme","mode","dataLabels","enabled","xaxis","type","tooltip","x","format","selection","ChartWrapper","chartData","setChartData","fetchData","name","c","buttons","label","ButtonGroup","className","button","Button","variant","color","onClick","timeline","daysToGoBack","dates","length","ApexCharts","exec","firstDay","getFullYear","updateData","height","allCountries","slug","Slug","ISO2","log","sizes","16","24","32","48","64","themes","FLAT","SHINY","CountryIcon","code","size","src","alt","defaultProps","darkTheme","createMuiTheme","palette","CountryPicker","setPickedCountry","countries","setCountries","fetchedCountries","sortedCountries","sort","b","localeCompare","ThemeProvider","Autocomplete","style","width","getOptionLabel","option","onChange","_","handleCountrySelection","renderInput","params","TextField","margin","renderOption","inputValue","matches","match","parts","part","fontWeight","highlight","text","Layout","pickedCountry","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","Login","Container","maxWidth","firebaseAuth","Logout","context","signOut","initializeApp","App","setTimeout","loaderWrapper","document","getElementById","addEventListener","display","opacity","splash","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","href","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.90b7b3d0.chunk.js","sourcesContent":["import React from 'react';\n\nexport const initialState = {\n\tuser: null,\n\tfetched: false,\n\n\tsetUser: () => {},\n};\n\nconst UserContext = React.createContext(initialState);\n\nexport default UserContext;\n","import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport PropTypes from 'prop-types';\nimport UserContext from './UserContext';\n\nconst initialState = {\n\tuser: null,\n\tfetched: false,\n};\nconst UserProvider = ({ children }) => {\n\tconst [user, setUser] = useState(initialState);\n\n\tuseEffect(() => {\n\t\tfirebase.auth().onAuthStateChanged((userAuth) => {\n\t\t\tsetUser({\n\t\t\t\tuser: userAuth,\n\t\t\t\tfetched: true,\n\t\t\t});\n\t\t});\n\t}, []);\n\n\treturn <UserContext.Provider value={{ ...user, setUser }}>{children}</UserContext.Provider>;\n};\n\nUserProvider.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n};\n\nexport default UserProvider;\n","const config = {\n\tapiKey: 'AIzaSyCGg--7lUP9qUJxPQUHmTyfkzZhW3AHsT8',\n\tauthDomain: 'pandemania-d9690.firebaseapp.com',\n\tprojectId: 'pandemania-d9690',\n\tstorageBucket: 'pandemania-d9690.appspot.com',\n\tmessagingSenderId: '404379003612',\n\tappId: '1:404379003612:web:4a1c9b3218bfdf46d0a219',\n};\n\nexport default config;\n","import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport UserContext from '../../context/user/UserContext';\n\nconst RestrictedRoute = ({ path, children }) => {\n\tconst userContext = useContext(UserContext);\n\n\tif (userContext.fetched) {\n\t\treturn userContext.user !== null ? <Route path={path}>{children}</Route> : <Redirect to=\"/\" />;\n\t}\n\treturn null;\n};\n\nRestrictedRoute.propTypes = {\n\tpath: PropTypes.string.isRequired,\n\tchildren: PropTypes.node.isRequired,\n};\n\nexport default RestrictedRoute;\n","const apiUrl = 'https://api.covid19api.com/country/';\n\nconst dataForCountry = async (countryName) => {\n\ttry {\n\t\treturn fetch(`${apiUrl}${countryName}`)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response.json();\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t})\n\t\t\t.then((data) =>\n\t\t\t\tdata.map((record) => ({\n\t\t\t\t\tid: record.ID,\n\t\t\t\t\tcountry: record.Country,\n\t\t\t\t\tconfirmed: record.Confirmed,\n\t\t\t\t\trecovered: record.Recovered,\n\t\t\t\t\tdate: Date.parse(record.Date),\n\t\t\t\t})),\n\t\t\t);\n\t} catch (error) {\n\t\treturn console.warn(error);\n\t}\n};\n\nexport default dataForCountry;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport Chart from 'react-apexcharts';\nimport ApexCharts from 'apexcharts';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport dataForCountry from '../../api/FetchDataForCountry';\nimport './ChartWrapper.css';\n\nconst id = 'area-datetime';\n\nconst timelineEnum = Object.freeze({\n\tONE_MONTH: 'one_month',\n\tSIX_MONTH: 'six_months',\n\tONE_YEAR: 'one_year',\n\tYTD: 'ytd',\n\tALL: 'all',\n});\n\nconst initialState = {\n\tseries: [\n\t\t{\n\t\t\tdata: [[new Date().getTime(), 0]],\n\t\t},\n\t],\n\toptions: {\n\t\tchart: {\n\t\t\tid,\n\t\t\tzoom: {\n\t\t\t\tautoScaleYaxis: true,\n\t\t\t},\n\t\t},\n\t\ttheme: {\n\t\t\tmode: 'dark',\n\t\t},\n\t\tdataLabels: {\n\t\t\tenabled: false,\n\t\t},\n\t\txaxis: {\n\t\t\ttype: 'datetime',\n\t\t},\n\t\ttooltip: {\n\t\t\tx: {\n\t\t\t\tformat: 'dd MMM yyyy',\n\t\t\t},\n\t\t},\n\t},\n\tselection: timelineEnum.ALL,\n};\n\nconst ChartWrapper = ({ countryName }) => {\n\tconst [chartData, setChartData] = useState(initialState);\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, [countryName]);\n\n\tconst updateData = (timeline) => {\n\t\tconst dates = chartData.series[0].data;\n\t\tconst length = dates.length - 1;\n\t\tlet daysToGoBack;\n\n\t\tif (length === -1) return;\n\n\t\tsetChartData({\n\t\t\t...chartData,\n\t\t\tselection: timeline,\n\t\t});\n\n\t\tswitch (timeline) {\n\t\t\tcase timelineEnum.ONE_MONTH:\n\t\t\t\tdaysToGoBack = 31;\n\t\t\t\tApexCharts.exec(id, 'zoomX', dates[length - daysToGoBack][0], dates[length][0]);\n\t\t\t\tbreak;\n\t\t\tcase timelineEnum.SIX_MONTH:\n\t\t\t\tdaysToGoBack = 6 * 31;\n\t\t\t\tApexCharts.exec(id, 'zoomX', dates[length - daysToGoBack][0], dates[dates.length - 1][0]);\n\t\t\t\tbreak;\n\t\t\tcase timelineEnum.ONE_YEAR:\n\t\t\t\tdaysToGoBack = 365;\n\t\t\t\tApexCharts.exec(id, 'zoomX', dates[length - daysToGoBack][0], dates[length][0]);\n\t\t\t\tbreak;\n\t\t\tcase timelineEnum.YTD: {\n\t\t\t\tconst firstDay = new Date(new Date().getFullYear(), 0, 1);\n\t\t\t\tApexCharts.exec(id, 'zoomX', firstDay.getTime(), dates[length][0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase timelineEnum.ALL:\n\t\t\t\tApexCharts.exec(id, 'zoomX', dates[0][0], dates[length][0]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t};\n\n\tconst fetchData = async () => {\n\t\tconst response = await dataForCountry(countryName);\n\n\t\tlet series = [];\n\t\tif (typeof response !== 'undefined') {\n\t\t\tseries = [\n\t\t\t\t{\n\t\t\t\t\tname: 'Confirmed cases',\n\t\t\t\t\tdata: response.map((c) => [c.date, c.confirmed]),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'Recovered cases',\n\t\t\t\t\tdata: response.map((c) => [c.date, c.recovered]),\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tsetChartData({\n\t\t\t...chartData,\n\t\t\tseries,\n\t\t});\n\t};\n\n\tconst buttons = [\n\t\t{\n\t\t\tvalue: timelineEnum.ONE_MONTH,\n\t\t\tlabel: '1M',\n\t\t},\n\t\t{\n\t\t\tvalue: timelineEnum.SIX_MONTH,\n\t\t\tlabel: '6M',\n\t\t},\n\t\t{\n\t\t\tvalue: timelineEnum.ONE_YEAR,\n\t\t\tlabel: '1Y',\n\t\t},\n\t\t{\n\t\t\tvalue: timelineEnum.YTD,\n\t\t\tlabel: 'YTD',\n\t\t},\n\t\t{\n\t\t\tvalue: timelineEnum.ALL,\n\t\t\tlabel: 'ALL',\n\t\t},\n\t];\n\n\treturn (\n\t\t<>\n\t\t\t<ButtonGroup className=\"toolbar\">\n\t\t\t\t{buttons.map((button) => (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey={button.value}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor={chartData.selection === button.value ? 'primary' : ''}\n\t\t\t\t\t\tonClick={() => updateData(button.value)}\n\t\t\t\t\t\tclassName={chartData.selection === button.value ? 'active' : ''}\n\t\t\t\t\t>\n\t\t\t\t\t\t{button.label}\n\t\t\t\t\t</Button>\n\t\t\t\t))}\n\t\t\t</ButtonGroup>\n\n\t\t\t<div className=\"chart-wrapper\">\n\t\t\t\t{chartData.series[0].data.length === 0 && <h2 className=\"chart-wrapper__header\">No data</h2>}\n\t\t\t\t<Chart options={chartData.options} series={chartData.series} type=\"area\" height={500} />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nChartWrapper.propTypes = {\n\tcountryName: propTypes.string.isRequired,\n};\n\nexport default ChartWrapper;\n","const apiUrl = 'https://api.covid19api.com/countries';\n\nconst allCountries = async () => {\n\ttry {\n\t\treturn fetch(apiUrl)\n\t\t\t.then((response) => {\n\t\t\t\tif (response.ok) {\n\t\t\t\t\treturn response.json();\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t})\n\t\t\t.then((data) =>\n\t\t\t\tdata.map((record) => ({\n\t\t\t\t\tcountry: record.Country,\n\t\t\t\t\tslug: record.Slug,\n\t\t\t\t\tISO2: record.ISO2,\n\t\t\t\t})),\n\t\t\t);\n\t} catch (error) {\n\t\treturn console.log(error);\n\t}\n};\n\nexport default allCountries;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst sizes = Object.freeze({\n\t16: 16,\n\t24: 24,\n\t32: 32,\n\t48: 48,\n\t64: 64,\n});\n\nconst themes = Object.freeze({\n\tFLAT: 'flat',\n\tSHINY: 'shiny',\n});\n\nconst CountryIcon = ({ code, size, name, theme }) => {\n\treturn <img src={`https://www.countryflags.io/${code}/${theme}/${size}.png`} alt={name} />;\n};\n\nexport default CountryIcon;\n\nCountryIcon.propTypes = {\n\tcode: propTypes.string,\n\tsize: propTypes.oneOf([16, 24, 32, 48, 64]),\n\tname: propTypes.string,\n\ttheme: propTypes.string,\n};\n\nCountryIcon.defaultProps = {\n\tcode: 'PL',\n\tsize: sizes[16],\n\tname: 'Poland',\n\ttheme: themes.FLAT,\n};\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport allCountries from '../../api/FetchAllCountries';\nimport CountryIcon from '../CountryIcon/CountryIcon';\nimport './CountryPicker.css';\n\nconst darkTheme = createMuiTheme({\n\tpalette: {\n\t\ttype: 'dark',\n\t},\n});\n\nconst CountryPicker = ({ setPickedCountry }) => {\n\tconst [countries, setCountries] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetchData();\n\t}, []);\n\n\tconst fetchData = async () => {\n\t\tconst fetchedCountries = await allCountries();\n\t\tconst sortedCountries = fetchedCountries.sort((a, b) => a.country.localeCompare(b.country));\n\t\tsetCountries(sortedCountries);\n\t};\n\n\tconst handleCountrySelection = (value) => {\n\t\tif (value) {\n\t\t\tsetPickedCountry(value);\n\t\t}\n\t};\n\n\treturn (\n\t\t<ThemeProvider theme={darkTheme}>\n\t\t\t<Autocomplete\n\t\t\t\tid=\"highlights-demo\"\n\t\t\t\ttheme={darkTheme}\n\t\t\t\tstyle={{ width: 300 }}\n\t\t\t\toptions={countries}\n\t\t\t\tgetOptionLabel={(option) => option.country}\n\t\t\t\tonChange={(_, value) => handleCountrySelection(value)}\n\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Countries\" variant=\"outlined\" margin=\"normal\" />}\n\t\t\t\trenderOption={(option, { inputValue }) => {\n\t\t\t\t\tconst matches = match(option.country, inputValue);\n\t\t\t\t\tconst parts = parse(option.country, matches);\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<CountryIcon code={option.ISO2} name={option.country} />\n\t\t\t\t\t\t\t{parts.map((part) => (\n\t\t\t\t\t\t\t\t<span key={part.text} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n\t\t\t\t\t\t\t\t\t{part.text}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</ThemeProvider>\n\t);\n};\n\nCountryPicker.propTypes = {\n\tsetPickedCountry: propTypes.func.isRequired,\n};\n\nexport default CountryPicker;\n","import React, { useState } from 'react';\nimport './Layout.css';\nimport AreaDateTimeCountryData from '../ChartWrapper/ChartWrapper';\nimport CountryPicker from '../CountryPicker/CountryPicker';\nimport CountryIcon from '../CountryIcon/CountryIcon';\n\nconst Layout = () => {\n\tconst [pickedCountry, setPickedCountry] = useState({\n\t\tslug: 'poland',\n\t\tcountry: 'Poland',\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h1>PandeMania 🦠</h1>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<p className=\"title\">\n\t\t\t\t\tCases and recoveries for whole country:\n\t\t\t\t\t{pickedCountry && <span className=\"bold\"> {pickedCountry.country}</span>}\n\t\t\t\t\t<CountryIcon code={pickedCountry.ISO2} size={24} name={pickedCountry.country} />\n\t\t\t\t</p>\n\t\t\t\t<CountryPicker setPickedCountry={(value) => setPickedCountry(value)} />\n\t\t\t\t<AreaDateTimeCountryData countryName={pickedCountry.slug} />\n\t\t\t</main>\n\t\t</>\n\t);\n};\n\nexport default Layout;\n","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Container from '@material-ui/core/Container';\nimport './Login.css';\n\nconst uiConfig = {\n\tsignInFlow: 'redirect',\n\tsignInSuccessUrl: '/',\n\tsignInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n};\n\nconst Login = () => {\n\treturn (\n\t\t<Container maxWidth=\"sm\" className=\"container\">\n\t\t\t<div className=\"paper\">\n\t\t\t\t<header>\n\t\t\t\t\t<h1>Choose sign-in option:</h1>\n\t\t\t\t</header>\n\t\t\t\t<StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n\t\t\t</div>\n\t\t</Container>\n\t);\n};\n\nexport default Login;\n","import React, { useContext, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Redirect } from 'react-router-dom';\nimport UserContext from '../../context/user/UserContext';\n\nconst Logout = () => {\n\tconst context = useContext(UserContext);\n\n\tuseEffect(() => {\n\t\tif (context.fetched) {\n\t\t\tfirebase\n\t\t\t\t.auth()\n\t\t\t\t.signOut()\n\t\t\t\t.then(() =>\n\t\t\t\t\tcontext.setUser({\n\t\t\t\t\t\tuser: null,\n\t\t\t\t\t\tfetched: false,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t}\n\t});\n\n\treturn <Redirect to=\"/\" />;\n};\n\nexport default Logout;\n","import React from 'react';\nimport firebase from 'firebase/app';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport UserProvider from './context/user/UserProvider';\nimport config from './FirebaseConfig';\nimport RestrictedRoute from './components/RestrictedRoute/RestrictedRoute';\nimport Layout from './components/Layout/Layout';\nimport Login from './components/Login/Login';\nimport Logout from './components/Logout/Logout';\n\nfirebase.initializeApp(config);\n\nfunction App() {\n\treturn (\n\t\t<UserProvider>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t\t<Login />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<RestrictedRoute path=\"/logout\">\n\t\t\t\t\t\t\t<Logout />\n\t\t\t\t\t\t</RestrictedRoute>\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<Layout />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t</UserProvider>\n\t);\n}\n\nexport default App;\n","async function splash() {\n\tsetTimeout(() => {\n\t\tconst loaderWrapper = document.getElementById('loader-wrapper');\n\t\tloaderWrapper.addEventListener(\n\t\t\t'transitionend',\n\t\t\t() => {\n\t\t\t\tloaderWrapper.style.display = 'none';\n\t\t\t},\n\t\t\ttrue,\n\t\t);\n\t\tloaderWrapper.style.opacity = 0.0;\n\t}, 1200);\n}\n\nexport default splash;\n","/* eslint-disable no-param-reassign */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","const reportWebVitals = (onPerfEntry) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable import/named */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport './splashscreen/splashscreen.css';\nimport splash from './splashscreen/splashscreen';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<div id=\"loader-wrapper\">\n\t\t\t<div id=\"loader\" />\n\t\t</div>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n\tsplash,\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}